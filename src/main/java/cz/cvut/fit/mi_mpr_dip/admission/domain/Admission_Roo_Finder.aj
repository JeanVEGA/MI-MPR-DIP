// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package cz.cvut.fit.mi_mpr_dip.admission.domain;

import cz.cvut.fit.mi_mpr_dip.admission.domain.Admission;
import cz.cvut.fit.mi_mpr_dip.admission.domain.personal.Person;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Admission_Roo_Finder {
    
    public static TypedQuery<Admission> Admission.findAdmissionsByCodeEquals(String code) {
        if (code == null || code.length() == 0) throw new IllegalArgumentException("The code argument is required");
        EntityManager em = Admission.entityManager();
        TypedQuery<Admission> q = em.createQuery("SELECT o FROM Admission AS o WHERE o.code = :code", Admission.class);
        q.setParameter("code", code);
        return q;
    }
    
    public static TypedQuery<Admission> Admission.findAdmissionsByPerson(Person person) {
        if (person == null) throw new IllegalArgumentException("The person argument is required");
        EntityManager em = Admission.entityManager();
        TypedQuery<Admission> q = em.createQuery("SELECT o FROM Admission AS o WHERE o.person = :person", Admission.class);
        q.setParameter("person", person);
        return q;
    }
    
}
